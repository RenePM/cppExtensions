#pragma once

#ifndef PUBLIC
#define PUBLIC extern "C"
#endif

#ifndef CPP_WINAPIDATATYPES_H
#define CPP_WINAPIDATATYPES_H
/*
 * SHORT = Int16, LONG = Int32, WORD = Uint16, DWORD = Uint32
 */
 // TODO Implement the correct win api design for win32 and win64 version
// #region WinApi DataType Aliases Win64
#define ATOM_  UInt16; // ushort
#define ATOMCSPTR_  IntPtr;
#define BOOL_  Int32; //bool
#define BOOLCS_  Boolean;
#define BOOLCSPTR_  IntPtr;
#define BOOLEAN_  Byte;
#define BOOLEANCS_  Boolean;
#define BOOLEANCSPTR_  IntPtr;
#define BYTE_  Byte;
#define BYTECSPTR_  IntPtr;
//**using CALLBACK_ = delegate; "use delegate keyword"
//**using WINAPI = "Use CallingConvention.StdCall"
//**using APIENTRY = "Use CallingConvention.StdCall"
#define CCHAR_  Char;
#define CCHARCSPTR_  IntPtr;
#define CHAR_  Char;
#define CHARCSPTR_  IntPtr;
#define COLORREF_  UInt32; // uint
#define COLORREFCSPTR  IntPtr;
//**using CONST_ = const; //"use const keyword"
#define double_t  Double;
#define double_tCSPTR_  IntPtr;
#define DWORD_  UInt32; // uint
#define DWORDCSPTR_  IntPtr;
#define DWORD_PTR_  UInt64;
#define DWORD_PTRCSPTR_  IntPtr;
#define DWORD32_  UInt32;
#define DWORD32CSPTR_  IntPtr;
#define DWORD64_  UInt64;
#define DWORD64CSPTR_  IntPtr;
#define DWORDLONG_  UInt64; // ulong
#define DWORDLONGCSPTR_  IntPtr;
#define errno_t_  Int32;
#define errno_tCSPTR_  IntPtr;
#define FCHAR_  Byte;
#define FCHARCSPTR_  IntPtr;
#define FLOAT_  Single;
#define FLOATCSPTR_  IntPtr;
#define float_t_  Double;
#define float_tCSPTR_  IntPtr;
#define FLONG_  UInt32;
#define FLONGCSPTR_  IntPtr;
#define FSHORT_  UInt16;
#define FSHORTCSPTR_  IntPtr;
#define GLOBALHANDLE_  IntPtr;
#define HACCEL_  IntPtr;
#define HANDLE_  IntPtr;
#define HBITMAP_  IntPtr;
#define HBRUSH_  IntPtr;
#define HCOLORSPACE_  IntPtr;
#define HCONV_  IntPtr;
#define HCONVLIST_  IntPtr;
#define HCURSOR_  IntPtr;
#define HDC_  IntPtr;
#define HDDEDATA_  IntPtr;
#define HDESK_  IntPtr;
#define HDROP_  IntPtr;
#define HDWP_  IntPtr;
#define HENHMETAFILE_  IntPtr;
#define HFILE_  Int32;
#define HFILECSPTR_  IntPtr;
#define HFONT_  IntPtr;
#define HGDIOBJ_  IntPtr;
#define HGLOBAL_  IntPtr;
#define HHOOK_  IntPtr;
#define HICON_  IntPtr;
#define HINSTANCE_  IntPtr;
#define HKEY_  IntPtr;
#define HKL_  IntPtr;
#define HLOCAL_  IntPtr;
#define HLSURF_  IntPtr;
#define HMENU_  IntPtr;
#define HMETAFILE_  IntPtr;
#define HMODULE_  IntPtr;
#define HMODULECS_  IntPtr;
#define HMONITOR_  IntPtr;
#define HPALETTE_  IntPtr;
#define HPEN_  IntPtr;
#define HRESULT_  Int32;
#define HRESULTCSPTR_  IntPtr;
#define HURESULT_  UInt32;
#define HURESULTCSPTR_  IntPtr;
#define HRGN_  IntPtr;
#define HRSRC_  IntPtr;
#define HSPRITE_  IntPtr;
#define HSTR_  IntPtr;
#define HSZ_  IntPtr;
#define HTASK_  IntPtr;
#define HWINSTA_  IntPtr;
#define HWND_  IntPtr;
#define INT8_  SByte;
#define INT8CSPTR_  IntPtr;
#define INT_  Int32;
#define INTCSPTR_  IntPtr;
#define INT_PTR_  Int64;
#define INT_PTRCSPTR_  IntPtr;
#define INT32_  Int32;
#define INT32CSPTR_  IntPtr;
#define INT64_  Int64;
#define INT64CSPTR_  IntPtr;
#define LANGID_  UInt16;
#define LANGIDCSPTR_  IntPtr;
#define LCID_  UInt32;
#define LCIDCSPTR_  IntPtr;
#define LCTYPE_  UInt32;
#define LCTYPECSPTR_  IntPtr;
#define LGRPID_  UInt32;
#define LGRPIDCSPTR_  IntPtr;
#define LOCALHANDLE_  IntPtr;
#define LONG_  Int32;
#define LONGCSPTR_  IntPtr;
#define LONG_PTR_  Int64;
#define LONG_PTRCSPTR_  IntPtr;
#define LONG32_  Int32;
#define LONG32CSPTR_  IntPtr;
#define LONG64_  Int64;
#define LONG64CSPTR_  IntPtr;
#define LONGLONG_  Int64;
#define LONGLONGCSPTR_  IntPtr;
#define LP_  String;
#define LPCSPTR_  IntPtr;
#define LPARAM_  Int64;
#define LPARAMCSPTR_  IntPtr;
#define LPBOOL_  IntPtr;
#define LPBOOLCS_  Boolean;
#define LPBYTE_  IntPtr;
#define LPBYTECS_  Byte;
#define LPCOLORREF_  IntPtr;
#define LPCOLORREFCS_  UInt32;
#define LPCSTR_  String;
#define LPCSTRCSPTR_  IntPtr;
#define LPCSTRCSALT_  StringBuilder;
#define LPCTSTR_  String;
#define LPCTSTRCSPTR_  IntPtr;
#define LPCTSTRCSALT_  StringBuilder;
#define LPCVOID_  IntPtr;
#define LPCWSTR_  String;
#define LPCWSTRCSPTR_  IntPtr;
#define LPCWSTRCSALT_  StringBuilder;
#define LPDWORD_  IntPtr;
#define LPDWORDCS_  UInt32;
#define LPHANDLE_  IntPtr;
#define LPINT_  IntPtr;
#define LPINTCS_  Int32;
#define LPLONG_  IntPtr;
#define LPLONGCS_  Int32;
#define LPSTR_  String;
#define LPSTRCSPTR_  IntPtr;
#define LPSTRCSALT_  StringBuilder;
#define LPTSTR_  String;
#define LPTSTRCSPTR_  IntPtr;
#define LPTSTRCSALT_  StringBuilder;
#define LPVOID_  IntPtr;
#define LPWORD_  IntPtr;
#define LPWORDCS_  UInt16;
#define LPWSTR_  String;
#define LPWSTRCSPTR_  IntPtr;
#define LPWSTRCSALT_  StringBuilder;
#define LRESULT_  Int64;
#define LRESULTCSPTR_  IntPtr;
#define NET_API_STATUS_  UInt32;
#define NET_API_STATUSCSPTR_  IntPtr;
#define PBOOL_  IntPtr;
#define PBOOLCS_  Boolean;
#define PBOOLEAN_  IntPtr;
#define PBOOLEANCS_  Boolean;
#define PBYTE_  IntPtr;
#define PBYTECS_  Byte;
#define PCCH_  Char;
#define PCCHCS_  Char;
#define PCCHCSPTR_  IntPtr;
#define PCHAR_  Char;
#define PCHARCS_  Char;
#define PCHARCSPTR_  IntPtr;
#define PCSTR_  String;
#define PCSTRCSPTR_  IntPtr;
#define PCSTRCSALT_  StringBuilder;
#define PCTSTR_  String;
#define PCTSTRCSPTR_  IntPtr;
#define PCTSTRCSALT_  StringBuilder;
#define PCWSTR_  String;
#define PCWSTRCSPTR_  IntPtr;
#define PCWSTRCSALT_  StringBuilder;
#define PDWORD_  IntPtr;
#define PDWORDCS_  UInt32;
#define PDWORD_PTR_  IntPtr;
#define PDWORD_PTRCS_  UInt64;
#define PDWORD32_  IntPtr;
#define PDWORD32CS_  UInt32;
#define PDWORD64_  IntPtr;
#define PDWORD64CS_  UInt64;
#define PDWORDLONG_  IntPtr;
#define PDWORDLONGCS_  UInt64;
#define PFLOAT_  IntPtr;
#define PFLOATCS_  Single;
#define PHALF_PTR_  IntPtr;
#define PHALF_PTRCS_  Int32;
#define PHANDLE_  IntPtr;
#define PHKEY_  IntPtr;
#define PINT_  IntPtr;
#define PINTCS_  Int32;
#define PINT_PTR_  IntPtr;
#define PINT_PTRCS_  Int64;
#define PINT8_  IntPtr;
#define PINT8CS_  SByte;
#define PINT16_  IntPtr;
#define PINT16CS_  Int16;
#define PINT32_  IntPtr;
#define PINT32CS_  Int32;
#define PINT64_  IntPtr;
#define PINT64CS_  Int64;
#define PLCID_  IntPtr;
#define PLCIDCS_  UInt32;
#define PLONG_  IntPtr;
#define PLONGCS_  Int32;
#define PLONG_PTR_  IntPtr;
#define PLONG_PTRCS_  Int64;
#define PLONG32_  IntPtr;
#define PLONG32CS_  Int32;
#define PLONG64_  IntPtr;
#define PLONG64CS_  Int64;
#define PLONGLONG_  IntPtr;
#define PLONGLONGCS_  Int64;
#define POINTERCSPTR_  IntPtr; // Shared pointer that can substitue any Win API Pointer #define Type casting
#define POINTER_32_  IntPtr;
#define POINTER_32CS_  Int32;
#define POINTER_64_  IntPtr;
#define POINTER_64CS_  Int64;
#define PSHORT_  IntPtr;
#define PSHORTCS_  Int16;
#define PSIZE_T_  IntPtr;
#define PSIZE_TCS_  UInt64;
#define PSSIZE_T_  IntPtr;
#define PSSIZE_TCS_  Int64;
#define PSTR_  String;
#define PSTRCSPTR_  IntPtr;
#define PSTRCSALT_  StringBuilder;
#define PTBYTE_  IntPtr;
#define PTBYTECS_  Char;
#define PTCHAR_  String;
#define PTCHARCSPTR_  IntPtr;
#define PTCHARCSALT_  StringBuilder;
#define PTSTR_  String;
#define PTSTRCSPTR_  IntPtr;
#define PTSTRCSALT_  StringBuilder;
#define PUCHAR_  String;
#define PUCHARCSPTR_  IntPtr;
#define PUCHARCSALT_  StringBuilder;
#define PUINT_  IntPtr;
#define PUINTCS_  UInt32;
#define PUINT_PTR_  IntPtr;
#define PUINT_PTRCS_  UInt64;
#define PUINT8_PTR_  IntPtr;
#define PUINT32_  IntPtr;
#define PUINT32CS_  UInt32;
#define PUINT64_  IntPtr;
#define PUINT64CS_  UInt64;
#define PULONG_  IntPtr;
#define PULONGCS_  UInt32;
#define PULONG_PTR_  IntPtr;
#define PULONG_PTRCS_  UInt64;
#define PULONG32_  IntPtr;
#define PULONG32CS_  UInt32;
#define PULONG64_  IntPtr;
#define PULONG64CS_  UInt64;
#define PULONGLONG_  IntPtr;
#define PULONGLONGCS_  UInt64;
#define PUSHORT_  IntPtr;
#define PUSHORTCS_  UInt16;
#define PVOID_  IntPtr;
#define PWCHAR_  String;
#define PWCHARCSPTR_  IntPtr;
#define PWCHARCSALT_  StringBuilder;
#define PWORD_  IntPtr;
#define PWORDCS_  UInt16;
#define PWSTR_  String;
#define PWSTRCSPTR_  IntPtr;
#define PWSTRCSALT_  StringBuilder;
#define QWORD_  UInt64;
#define SC_HANDLE_  IntPtr;
#define SC_LOCK_  IntPtr;
#define SERVICE_STATUS_HANDLE_  IntPtr;
#define SBYTE_  SByte;
#define SBYTECSPTR_  IntPtr;
#define SHORT_  Int16;
#define SHORTCSPTR_  IntPtr;
#define SIZE_T_  UInt64;
#define SIZE_TCSPTR_  IntPtr;
#define SSIZE_T_  Int64;
#define SSIZE_TCSPTR_  IntPtr;
#define TBYTE_  Char;
#define TBYTECSPTR_  IntPtr;
#define TCHAR_  Char;
#define TCHARCSPTR_  IntPtr;
#define UCHAR_  Char;
#define UCHARCSPTR_  IntPtr;
#define UHALF_PTR_  UInt32;
#define UHALF_PTRCSPTR_  IntPtr;
#define UINT8_  Byte;
#define UINT8CSPTR_  IntPtr;
#define UINT_  UInt32;
#define UINTCSPTR_  IntPtr;
#define UINT_PTR_  UInt64;
#define UINT_PTRCSPTR_  IntPtr;
#define UINT32_  UInt32;
#define UINT32CSPTR_  IntPtr;
#define UINT64_  UInt64;
#define UINT64CSPTR_  IntPtr;
#define ULONG_  UInt32;
#define ULONGCSPTR_  IntPtr;
#define ULONG_PTR_  UInt64;
#define ULONG_PTRCSPTR_  IntPtr;
#define ULONG32_  UInt32;
#define ULONG32CSPTR_  IntPtr;
#define ULONG64_  UInt64;
#define ULONG64CSPTR_  IntPtr;
#define ULONGLONG_  UInt64;
#define ULONGLONGCSPTR_  IntPtr;
#define USHORT_  UInt16;
#define USHORTCSPTR_  IntPtr;
#define USN_  Int64;
#define USNCSPTR_  IntPtr;
//using VOID_ = void; //"use void keyword"
#define VOIDCSPTR_  IntPtr;
#define WCHAR_  Char;
#define WCHARCSPTR_  IntPtr;
#define WINAPI_  CallingConvention; //"Use CallingConvention.StdCall Consts"
#define WORD_  UInt16;
#define WORDCSPTR_  IntPtr;
#define WPARAM_  UInt64;
#define WPARAMCSPTR_  IntPtr;
//#endregion Win64
#endif